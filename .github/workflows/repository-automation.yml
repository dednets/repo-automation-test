---
name: Complete Repository Automation
# Fork-compatible automation for repository triage, labeling, and management

on:
  # Fork compatibility via workflow_run (triggered by repository-automation-trigger.yml)
  workflow_run:
    workflows: ["Repository Automation: Trigger"]
    types: [completed]
  
  # Scheduled events for stale detection
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC
  
  # Manual trigger for testing
  workflow_dispatch:
    inputs:
      pr-number:
        description: 'PR number to process (optional)'
        required: false
        type: string
      dry-run:
        description: 'Dry run mode (true/false)'
        required: false
        default: 'false'

permissions:
  issues: write
  pull-requests: write
  checks: write

jobs:
  automation:
    runs-on: ubuntu-latest
    # IMPORTANT: This repository reference gets updated by the test setup
    if: github.repository == 'dednets/repo-automation-test'
    
    steps:
      - name: Check Repository Context
        id: check-context
        uses: actions/github-script@v7
        with:
          script: |
            const eventType = context.eventName;
            
            console.log(`Repository: ${context.repo.owner}/${context.repo.repo}`);
            console.log(`Event: ${eventType}`);
            
            core.setOutput('should-run-automation', 'true');

      - name: Download Artifact (if workflow_run)
        if: github.event_name == 'workflow_run'
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
          name: pr-metadata
          path: ./pr-metadata

      - name: Repository Automation
        uses: thenets/repo-automation@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          custom-github-token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          dry-run: ${{ github.event.inputs.dry-run || 'false' }}
          
          # Enable all features for comprehensive testing
          accepted-releases: '["1.0", "1.1", "1.2", "1.3", "1.4", "1.5", "1.6", "2.0", "2.1", "2.2", "devel", "main"]'
          accepted-backports: '["1.0", "1.1", "1.2", "1.3", "1.4", "1.5", "1.6", "2.0", "2.1", "2.2", "main"]'
          enable-feature-branch: true
          stale-days: 1

      - name: Post Results Summary
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            const eventType = context.eventName;
            const action = context.payload.action || 'none';
            let number = context.payload.pull_request?.number || context.payload.issue?.number || 'N/A';
            let targetType = eventType === 'issues' ? 'Issue' : 'PR';
            
            // For workflow_run events, try to get the PR number from artifact metadata
            if (eventType === 'workflow_run') {
              try {
                const metadataPath = path.join('./pr-metadata', 'metadata.json');
                if (fs.existsSync(metadataPath)) {
                  const metadataContent = fs.readFileSync(metadataPath, 'utf8');
                  const metadata = JSON.parse(metadataContent);
                  if (metadata && metadata.number) {
                    number = metadata.number;
                    targetType = metadata.type === 'issue' ? 'Issue' : 'PR';
                  }
                }
              } catch (error) {
                console.log('Could not load metadata for summary:', error.message);
              }
            }
            
            console.log(`ðŸ“Š Repository Automation Summary`);
            console.log(`Event: ${eventType}.${action}`);
            console.log(`Number: ${number}`);
            console.log(`Repository: ${context.repo.owner}/${context.repo.repo}`);
            
            if (eventType === 'workflow_run') {
              const workflowRun = context.payload.workflow_run;
              console.log(`Triggered by: ${workflowRun.name}`);
              console.log(`Head branch: ${workflowRun.head_branch}`);
              console.log(`Conclusion: ${workflowRun.conclusion}`);
            }
            
            // Create proper markdown summary
            let summaryContent = `# ðŸ¤– Repository Automation Complete\n\n`;
            summaryContent += `- **Event**: \`${eventType}.${action}\`\n`;
            summaryContent += `- **Target**: ${targetType} #${number}\n`;
            summaryContent += `- **Repository**: \`${context.repo.owner}/${context.repo.repo}\`\n`;
            summaryContent += `- **Source**: ${eventType === 'workflow_run' ? 'Fork trigger workflow' : `Direct ${eventType} event`}\n`;
            
            await core.summary.addRaw(summaryContent).write();